generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        String   @id @default(uuid())
  name      String
  roleUsers RoleUser[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RoleUser {
  id        String   @id @default(uuid())
  roleId    String
  role      Role     @relation(fields: [roleId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([roleId, userId])
}

model School {
  id        String   @id @default(uuid())
  name      String   @unique
  email     String   @unique
  contactPhone String   @unique
  address   String   @unique
  about     String?
  motto     String?
  color     String?
  logo      String?
  tenantId  String?   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String   @id @default(uuid())
  fullName  String
  username  String?   @unique
  password  String?
  email     String?   @unique
  phoneNumber String?   @unique
  address   String?
  schoolId  String
  school    School   @relation(fields: [schoolId], references: [id])
  externalId String?   @unique
  roleUsers RoleUser[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Term {
  id        String   @id @default(uuid())
  name      String
  academicCalendars AcademicCalendar[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id @default(uuid())
  name      String
  academicCalendars AcademicCalendar[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AcademicCalendar {
  id        String   @id @default(uuid())
  termId    String
  term      Term     @relation(fields: [termId], references: [id])
  sessionId String
  session   Session  @relation(fields: [sessionId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
